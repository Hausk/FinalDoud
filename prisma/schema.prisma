// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Work {
  id          Int       @id @default(autoincrement())
  title       String
  slug        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt 
  published   Boolean   @default(false)
  images      Image[]
  pinnedImage String
}

model Image {
  id        Int       @id @default(autoincrement())
  fileName  String    @unique
  createdAt DateTime  @default(now())
  src       String    @unique
  work      Work      @relation(fields: [workId], references: [id])
  workId    Int
  width     Int
  height    Int
}

model HomePage {
id                Int @id @default(autoincrement())
  image           String
  paragraph       String
  background_from String
  background_to   String
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model AuthorizedUser {
  id    String @id @default(cuid())
  email String
  role  String
}